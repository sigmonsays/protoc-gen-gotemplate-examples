// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ex1/service.proto

package ex1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Color int32

const (
	Color_Red   Color = 0
	Color_Green Color = 1
	Color_Blue  Color = 2
)

var Color_name = map[int32]string{
	0: "Red",
	1: "Green",
	2: "Blue",
}
var Color_value = map[string]int32{
	"Red":   0,
	"Green": 1,
	"Blue":  2,
}

func (x Color) String() string {
	return proto.EnumName(Color_name, int32(x))
}
func (Color) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_service_ab2403c10d17d15d, []int{0}
}

type PingReply_Code int32

const (
	PingReply_OK PingReply_Code = 0
)

var PingReply_Code_name = map[int32]string{
	0: "OK",
}
var PingReply_Code_value = map[string]int32{
	"OK": 0,
}

func (x PingReply_Code) String() string {
	return proto.EnumName(PingReply_Code_name, int32(x))
}
func (PingReply_Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_service_ab2403c10d17d15d, []int{1, 0}
}

type PingRequest struct {
	Color                Color    `protobuf:"varint,1,opt,name=color,proto3,enum=ex1.Color" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_ab2403c10d17d15d, []int{0}
}
func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (dst *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(dst, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

func (m *PingRequest) GetColor() Color {
	if m != nil {
		return m.Color
	}
	return Color_Red
}

type PingReply struct {
	Code                 PingReply_Code `protobuf:"varint,1,opt,name=code,proto3,enum=ex1.PingReply_Code" json:"code,omitempty"`
	Message              string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PingReply) Reset()         { *m = PingReply{} }
func (m *PingReply) String() string { return proto.CompactTextString(m) }
func (*PingReply) ProtoMessage()    {}
func (*PingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_ab2403c10d17d15d, []int{1}
}
func (m *PingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingReply.Unmarshal(m, b)
}
func (m *PingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingReply.Marshal(b, m, deterministic)
}
func (dst *PingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingReply.Merge(dst, src)
}
func (m *PingReply) XXX_Size() int {
	return xxx_messageInfo_PingReply.Size(m)
}
func (m *PingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PingReply.DiscardUnknown(m)
}

var xxx_messageInfo_PingReply proto.InternalMessageInfo

func (m *PingReply) GetCode() PingReply_Code {
	if m != nil {
		return m.Code
	}
	return PingReply_OK
}

func (m *PingReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "ex1.PingRequest")
	proto.RegisterType((*PingReply)(nil), "ex1.PingReply")
	proto.RegisterEnum("ex1.Color", Color_name, Color_value)
	proto.RegisterEnum("ex1.PingReply_Code", PingReply_Code_name, PingReply_Code_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MyApiClient is the client API for MyApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MyApiClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error)
}

type myApiClient struct {
	cc *grpc.ClientConn
}

func NewMyApiClient(cc *grpc.ClientConn) MyApiClient {
	return &myApiClient{cc}
}

func (c *myApiClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error) {
	out := new(PingReply)
	err := c.cc.Invoke(ctx, "/ex1.MyApi/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MyApiServer is the server API for MyApi service.
type MyApiServer interface {
	Ping(context.Context, *PingRequest) (*PingReply, error)
}

func RegisterMyApiServer(s *grpc.Server, srv MyApiServer) {
	s.RegisterService(&_MyApi_serviceDesc, srv)
}

func _MyApi_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyApiServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ex1.MyApi/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyApiServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MyApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ex1.MyApi",
	HandlerType: (*MyApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _MyApi_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ex1/service.proto",
}

func init() { proto.RegisterFile("ex1/service.proto", fileDescriptor_service_ab2403c10d17d15d) }

var fileDescriptor_service_ab2403c10d17d15d = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0xc1, 0x4e, 0x84, 0x30,
	0x10, 0x40, 0x29, 0xdb, 0xee, 0xca, 0x98, 0x60, 0x1d, 0x2f, 0xab, 0xa7, 0xb5, 0x89, 0x09, 0xd9,
	0x43, 0x0d, 0xbb, 0x5f, 0xa0, 0x1c, 0x3c, 0x18, 0x83, 0xe1, 0x0f, 0x14, 0x26, 0x84, 0x04, 0x29,
	0xb6, 0x60, 0xe0, 0xef, 0x0d, 0xd5, 0x18, 0xf7, 0x3a, 0xef, 0x65, 0xde, 0x0c, 0x5c, 0xd2, 0x94,
	0xde, 0x3b, 0xb2, 0x5f, 0x4d, 0x49, 0xba, 0xb7, 0x66, 0x30, 0xb8, 0xa2, 0x29, 0x55, 0x09, 0x9c,
	0xbf, 0x36, 0x5d, 0x5d, 0xd0, 0xe7, 0x48, 0x6e, 0xc0, 0x6b, 0x10, 0xa5, 0x69, 0x8d, 0xdd, 0xb2,
	0x1d, 0x4b, 0xe2, 0x03, 0x68, 0x9a, 0x52, 0x9d, 0x2d, 0x13, 0x95, 0x43, 0xf4, 0x63, 0xf6, 0xed,
	0x8c, 0xb7, 0xc0, 0x4b, 0x53, 0xd1, 0xaf, 0x76, 0xe5, 0xb5, 0x3f, 0xaa, 0x33, 0x53, 0x11, 0x5e,
	0xc0, 0xe6, 0x83, 0x9c, 0x7b, 0xab, 0x69, 0x1b, 0xee, 0x58, 0x12, 0xa9, 0x18, 0xb8, 0x07, 0x6b,
	0x08, 0xf3, 0x67, 0x19, 0xec, 0xef, 0x40, 0xf8, 0xcd, 0xb8, 0x81, 0x55, 0x41, 0x95, 0x0c, 0x30,
	0x02, 0xf1, 0x64, 0x89, 0x3a, 0xc9, 0xf0, 0x0c, 0xf8, 0x63, 0x3b, 0x92, 0x0c, 0x0f, 0x47, 0x10,
	0x2f, 0xf3, 0x43, 0xdf, 0xe0, 0x1e, 0xf8, 0x92, 0x40, 0xf9, 0xaf, 0xe6, 0xaf, 0xbe, 0x89, 0x4f,
	0xfb, 0x2a, 0x78, 0x5f, 0xfb, 0x17, 0x8f, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x3e, 0x38,
	0x0f, 0xf7, 0x00, 0x00, 0x00,
}
